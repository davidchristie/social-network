version: 2

references:
  default-job: &default-job
    docker:
    - image: circleci/node:9.11
    working_directory: ~/repo

  test-package: &test-package
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Link dependencies
          command: yarn install --offline
      - run:
          name: Run unit tests
          command: yarn $PACKAGE test

jobs:
  build:
    <<: *default-job
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Link dependencies
          command: yarn install --offline
      - run:
          name: Build packages
          command: yarn build
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Start microservices
          command: |
              yarn production build
              yarn production up --detach
      - run:
          name: List production images
          command: yarn production images
      - run:
          name: List production containers
          command: yarn production ps
      - run:
          name: Deploy Prisma data-model
          command: |
              docker build \
                  --file packages/data-model/Dockerfile \
                  --tag davidchristie/data-model .
              docker run \
                  --network repo_default \
                  --env "PRISMA_ENDPOINT=http://prisma:4466/social-network/production" \
                  davidchristie/data-model
      - run:
          name: Run end-to-end tests
          command: |
              docker build \
                  --file docker/end-to-end-tests.Dockerfile \
                  --tag end-to-end-tests .
              docker run \
                  --env "ORIGIN=http://web-client:3000" \
                  --network repo_default end-to-end-tests

  install:
    <<: *default-job
    steps:
      - checkout
      # Download and cache dependencies.
      - restore_cache:
          keys:
            # When lock file changes, use increasingly general patterns to
            # restore cache.
            - dependencies-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - dependencies-v2-{{ .Branch }}-
            - dependencies-v2-
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
            - ~/.cache/yarn
          key: dependencies-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}

  puppeteer:
    <<: *default-job
    steps:
      - checkout
      - run:
          name: Check for changes
          command: |
              if [ -z $(git diff --name-only HEAD~ docker/puppeteer.Dockerfile) ]
              then
                echo "No changes in the last commit"
                circleci step halt
              else
                echo "Was changed in the last commit"
              fi
      - setup_remote_docker
      - run:
          name: Log in to docker
          command: |
              docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: Set image name
          command: |
              echo 'IMAGE="$DOCKER_USERNAME/puppeteer"' >> $BASH_ENV
              echo 'VERSION="$(git rev-parse --short HEAD)"' >> $BASH_ENV
      - run:
          name: Build image
          command: |
              docker build \
                  --file docker/puppeteer.Dockerfile \
                  --tag $IMAGE:latest \
                  --tag $IMAGE:$VERSION \
                  .
      - run:
          name: Push image
          command: |
              docker push $IMAGE

  test-authentication:
    <<: *default-job
    <<: *test-package
    environment:
      PACKAGE: authentication

  test-public-api:
    <<: *default-job
    <<: *test-package
    environment:
      PACKAGE: public-api

  test-web-client:
    <<: *default-job
    <<: *test-package
    environment:
      PACKAGE: web-client

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build:
          requires:
            - test-authentication
            - test-public-api
            - test-web-client
      - install:
          requires:
            - puppeteer
      - puppeteer
      - test-authentication:
          requires:
            - install
      - test-public-api:
          requires:
            - install
      - test-web-client:
          requires:
            - install
