version: 2

jobs:
  build:
    docker:
      - image: circleci/node:9.11
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies.
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # Fallback to using the latest cache if no exact match is found.
          - v1-dependencies-

      - run:
          name: Install dependencies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Build packages
          command: yarn build

      - run:
          name: Run unit tests
          command: yarn test:unit

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Start microservices
          command: |
              yarn production build
              yarn production up --detach

      - run:
          name: List production images
          command: yarn production images

      - run:
          name: List production containers
          command: yarn production ps

      - run:
          name: Deploy Prisma data-model
          command: |
              docker build \
                  --file packages/data-model/Dockerfile \
                  --tag davidchristie/data-model .
              docker run \
                  --network repo_default \
                  --env "PRISMA_ENDPOINT=http://prisma:4466/social-network/production" \
                  davidchristie/data-model

      - run:
          name: Run end-to-end tests
          command: |
              docker build \
                  --file docker/end-to-end-tests.Dockerfile \
                  --tag end-to-end-tests .
              docker run \
                  --env "ORIGIN=http://web-client:3000" \
                  --network repo_default end-to-end-tests

  puppeteer:
    docker:
      - image: circleci/node:9.11
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Check for changes
          command: |
              if [ -z $(git diff --name-only HEAD~ docker/puppeteer.Dockerfile) ]
              then
                echo "No changes in the last commit"
              else
                echo "Has changed in the last commit"

                docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

                docker build \
                  --file docker/puppeteer.Dockerfile \
                  --tag davidchristie/puppeteer .

                docker push davidchristie/puppeteer
              fi

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build:
          requires:
            - puppeteer
      - puppeteer
