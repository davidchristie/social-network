// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component when logged out 1`] = `
<Header>
  <Query
    query={
      Object {
        "definitions": Array [
          Object {
            "directives": Array [],
            "kind": "FragmentDefinition",
            "name": Object {
              "kind": "Name",
              "value": "Image",
            },
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "alias": undefined,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "id",
                  },
                  "selectionSet": undefined,
                },
                Object {
                  "alias": undefined,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "url",
                  },
                  "selectionSet": undefined,
                },
              ],
            },
            "typeCondition": Object {
              "kind": "NamedType",
              "name": Object {
                "kind": "Name",
                "value": "Image",
              },
            },
          },
          Object {
            "directives": Array [],
            "kind": "OperationDefinition",
            "name": Object {
              "kind": "Name",
              "value": "Account",
            },
            "operation": "query",
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "alias": undefined,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "account",
                  },
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "email",
                        },
                        "selectionSet": undefined,
                      },
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "id",
                        },
                        "selectionSet": undefined,
                      },
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "name",
                        },
                        "selectionSet": undefined,
                      },
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "profile",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "avatar",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "directives": Array [],
                                    "kind": "FragmentSpread",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "Image",
                                    },
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "name",
                              },
                              "selectionSet": undefined,
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
            "variableDefinitions": Array [],
          },
        ],
        "kind": "Document",
        "loc": Object {
          "end": 220,
          "start": 0,
        },
      }
    }
  >
    <Topbar
      className="Header"
    >
      <WithStyles(Content$2)
        className="Header"
      >
        <Content$2
          className="Header"
          classes={
            Object {
              "topbar": "Content-2-topbar-1",
            }
          }
        >
          <div
            className="Content-2-topbar-1 Header"
          >
            <WithStyles(AppBar)
              color="default"
              position="static"
            >
              <AppBar
                classes={
                  Object {
                    "colorDefault": "MuiAppBar-colorDefault-8",
                    "colorPrimary": "MuiAppBar-colorPrimary-9",
                    "colorSecondary": "MuiAppBar-colorSecondary-10",
                    "positionAbsolute": "MuiAppBar-positionAbsolute-4",
                    "positionFixed": "MuiAppBar-positionFixed-3",
                    "positionRelative": "MuiAppBar-positionRelative-7",
                    "positionStatic": "MuiAppBar-positionStatic-6",
                    "positionSticky": "MuiAppBar-positionSticky-5",
                    "root": "MuiAppBar-root-2",
                  }
                }
                color="default"
                position="static"
              >
                <WithStyles(Paper)
                  className="MuiAppBar-root-2 MuiAppBar-positionStatic-6 MuiAppBar-colorDefault-8"
                  component="header"
                  elevation={4}
                  square={true}
                >
                  <Paper
                    className="MuiAppBar-root-2 MuiAppBar-positionStatic-6 MuiAppBar-colorDefault-8"
                    classes={
                      Object {
                        "elevation0": "MuiPaper-elevation0-13",
                        "elevation1": "MuiPaper-elevation1-14",
                        "elevation10": "MuiPaper-elevation10-23",
                        "elevation11": "MuiPaper-elevation11-24",
                        "elevation12": "MuiPaper-elevation12-25",
                        "elevation13": "MuiPaper-elevation13-26",
                        "elevation14": "MuiPaper-elevation14-27",
                        "elevation15": "MuiPaper-elevation15-28",
                        "elevation16": "MuiPaper-elevation16-29",
                        "elevation17": "MuiPaper-elevation17-30",
                        "elevation18": "MuiPaper-elevation18-31",
                        "elevation19": "MuiPaper-elevation19-32",
                        "elevation2": "MuiPaper-elevation2-15",
                        "elevation20": "MuiPaper-elevation20-33",
                        "elevation21": "MuiPaper-elevation21-34",
                        "elevation22": "MuiPaper-elevation22-35",
                        "elevation23": "MuiPaper-elevation23-36",
                        "elevation24": "MuiPaper-elevation24-37",
                        "elevation3": "MuiPaper-elevation3-16",
                        "elevation4": "MuiPaper-elevation4-17",
                        "elevation5": "MuiPaper-elevation5-18",
                        "elevation6": "MuiPaper-elevation6-19",
                        "elevation7": "MuiPaper-elevation7-20",
                        "elevation8": "MuiPaper-elevation8-21",
                        "elevation9": "MuiPaper-elevation9-22",
                        "root": "MuiPaper-root-11",
                        "rounded": "MuiPaper-rounded-12",
                      }
                    }
                    component="header"
                    elevation={4}
                    square={true}
                  >
                    <header
                      className="MuiPaper-root-11 MuiPaper-elevation4-17 MuiAppBar-root-2 MuiAppBar-positionStatic-6 MuiAppBar-colorDefault-8"
                    >
                      <WithStyles(Toolbar)>
                        <Toolbar
                          classes={
                            Object {
                              "dense": "MuiToolbar-dense-41",
                              "gutters": "MuiToolbar-gutters-39",
                              "regular": "MuiToolbar-regular-40",
                              "root": "MuiToolbar-root-38",
                            }
                          }
                          disableGutters={false}
                          variant="regular"
                        >
                          <div
                            className="MuiToolbar-root-38 MuiToolbar-regular-40 MuiToolbar-gutters-39"
                          >
                            <Container>
                              <div
                                className="Container"
                              >
                                <Link
                                  className="logo"
                                  replace={false}
                                  to="/"
                                >
                                  <a
                                    className="logo"
                                    href="/"
                                    onClick={[Function]}
                                  >
                                    Social Network
                                  </a>
                                </Link>
                                <div>
                                  <ButtonLink
                                    to="/login"
                                  >
                                    <Link
                                      className="ButtonLink"
                                      replace={false}
                                      to="/login"
                                    >
                                      <a
                                        className="ButtonLink"
                                        href="/login"
                                        onClick={[Function]}
                                      >
                                        <Button$2>
                                          <WithStyles(Button)>
                                            <Button
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit-63",
                                                  "contained": "MuiButton-contained-53",
                                                  "containedPrimary": "MuiButton-containedPrimary-54",
                                                  "containedSecondary": "MuiButton-containedSecondary-55",
                                                  "disabled": "MuiButton-disabled-62",
                                                  "extendedFab": "MuiButton-extendedFab-60",
                                                  "fab": "MuiButton-fab-59",
                                                  "flat": "MuiButton-flat-47",
                                                  "flatPrimary": "MuiButton-flatPrimary-48",
                                                  "flatSecondary": "MuiButton-flatSecondary-49",
                                                  "focusVisible": "MuiButton-focusVisible-61",
                                                  "fullWidth": "MuiButton-fullWidth-67",
                                                  "label": "MuiButton-label-43",
                                                  "mini": "MuiButton-mini-64",
                                                  "outlined": "MuiButton-outlined-50",
                                                  "outlinedPrimary": "MuiButton-outlinedPrimary-51",
                                                  "outlinedSecondary": "MuiButton-outlinedSecondary-52",
                                                  "raised": "MuiButton-raised-56",
                                                  "raisedPrimary": "MuiButton-raisedPrimary-57",
                                                  "raisedSecondary": "MuiButton-raisedSecondary-58",
                                                  "root": "MuiButton-root-42",
                                                  "sizeLarge": "MuiButton-sizeLarge-66",
                                                  "sizeSmall": "MuiButton-sizeSmall-65",
                                                  "text": "MuiButton-text-44",
                                                  "textPrimary": "MuiButton-textPrimary-45",
                                                  "textSecondary": "MuiButton-textSecondary-46",
                                                }
                                              }
                                              color="default"
                                              component="button"
                                              disableFocusRipple={false}
                                              disabled={false}
                                              fullWidth={false}
                                              mini={false}
                                              size="medium"
                                              type="button"
                                              variant="text"
                                            >
                                              <WithStyles(ButtonBase)
                                                className="MuiButton-root-42 MuiButton-text-44 MuiButton-flat-47"
                                                component="button"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="MuiButton-focusVisible-61"
                                                type="button"
                                              >
                                                <ButtonBase
                                                  centerRipple={false}
                                                  className="MuiButton-root-42 MuiButton-text-44 MuiButton-flat-47"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-69",
                                                      "focusVisible": "MuiButtonBase-focusVisible-70",
                                                      "root": "MuiButtonBase-root-68",
                                                    }
                                                  }
                                                  component="button"
                                                  disableRipple={false}
                                                  disableTouchRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="MuiButton-focusVisible-61"
                                                  tabIndex="0"
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root-68 MuiButton-root-42 MuiButton-text-44 MuiButton-flat-47"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex="0"
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label-43"
                                                    >
                                                      Login
                                                    </span>
                                                    <NoSsr
                                                      defer={false}
                                                      fallback={null}
                                                    >
                                                      <WithStyles(TouchRipple)
                                                        center={false}
                                                        innerRef={[Function]}
                                                      >
                                                        <TouchRipple
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child-75",
                                                              "childLeaving": "MuiTouchRipple-childLeaving-76",
                                                              "childPulsate": "MuiTouchRipple-childPulsate-77",
                                                              "ripple": "MuiTouchRipple-ripple-72",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-74",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible-73",
                                                              "root": "MuiTouchRipple-root-71",
                                                            }
                                                          }
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            className="MuiTouchRipple-root-71"
                                                            component="span"
                                                            enter={true}
                                                            exit={true}
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root-71"
                                                            />
                                                          </TransitionGroup>
                                                        </TouchRipple>
                                                      </WithStyles(TouchRipple)>
                                                    </NoSsr>
                                                  </button>
                                                </ButtonBase>
                                              </WithStyles(ButtonBase)>
                                            </Button>
                                          </WithStyles(Button)>
                                        </Button$2>
                                      </a>
                                    </Link>
                                  </ButtonLink>
                                  <ButtonLink
                                    to="/signup"
                                  >
                                    <Link
                                      className="ButtonLink"
                                      replace={false}
                                      to="/signup"
                                    >
                                      <a
                                        className="ButtonLink"
                                        href="/signup"
                                        onClick={[Function]}
                                      >
                                        <Button$2>
                                          <WithStyles(Button)>
                                            <Button
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit-63",
                                                  "contained": "MuiButton-contained-53",
                                                  "containedPrimary": "MuiButton-containedPrimary-54",
                                                  "containedSecondary": "MuiButton-containedSecondary-55",
                                                  "disabled": "MuiButton-disabled-62",
                                                  "extendedFab": "MuiButton-extendedFab-60",
                                                  "fab": "MuiButton-fab-59",
                                                  "flat": "MuiButton-flat-47",
                                                  "flatPrimary": "MuiButton-flatPrimary-48",
                                                  "flatSecondary": "MuiButton-flatSecondary-49",
                                                  "focusVisible": "MuiButton-focusVisible-61",
                                                  "fullWidth": "MuiButton-fullWidth-67",
                                                  "label": "MuiButton-label-43",
                                                  "mini": "MuiButton-mini-64",
                                                  "outlined": "MuiButton-outlined-50",
                                                  "outlinedPrimary": "MuiButton-outlinedPrimary-51",
                                                  "outlinedSecondary": "MuiButton-outlinedSecondary-52",
                                                  "raised": "MuiButton-raised-56",
                                                  "raisedPrimary": "MuiButton-raisedPrimary-57",
                                                  "raisedSecondary": "MuiButton-raisedSecondary-58",
                                                  "root": "MuiButton-root-42",
                                                  "sizeLarge": "MuiButton-sizeLarge-66",
                                                  "sizeSmall": "MuiButton-sizeSmall-65",
                                                  "text": "MuiButton-text-44",
                                                  "textPrimary": "MuiButton-textPrimary-45",
                                                  "textSecondary": "MuiButton-textSecondary-46",
                                                }
                                              }
                                              color="default"
                                              component="button"
                                              disableFocusRipple={false}
                                              disabled={false}
                                              fullWidth={false}
                                              mini={false}
                                              size="medium"
                                              type="button"
                                              variant="text"
                                            >
                                              <WithStyles(ButtonBase)
                                                className="MuiButton-root-42 MuiButton-text-44 MuiButton-flat-47"
                                                component="button"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="MuiButton-focusVisible-61"
                                                type="button"
                                              >
                                                <ButtonBase
                                                  centerRipple={false}
                                                  className="MuiButton-root-42 MuiButton-text-44 MuiButton-flat-47"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-69",
                                                      "focusVisible": "MuiButtonBase-focusVisible-70",
                                                      "root": "MuiButtonBase-root-68",
                                                    }
                                                  }
                                                  component="button"
                                                  disableRipple={false}
                                                  disableTouchRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="MuiButton-focusVisible-61"
                                                  tabIndex="0"
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root-68 MuiButton-root-42 MuiButton-text-44 MuiButton-flat-47"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex="0"
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label-43"
                                                    >
                                                      Signup
                                                    </span>
                                                    <NoSsr
                                                      defer={false}
                                                      fallback={null}
                                                    >
                                                      <WithStyles(TouchRipple)
                                                        center={false}
                                                        innerRef={[Function]}
                                                      >
                                                        <TouchRipple
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child-75",
                                                              "childLeaving": "MuiTouchRipple-childLeaving-76",
                                                              "childPulsate": "MuiTouchRipple-childPulsate-77",
                                                              "ripple": "MuiTouchRipple-ripple-72",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-74",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible-73",
                                                              "root": "MuiTouchRipple-root-71",
                                                            }
                                                          }
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            className="MuiTouchRipple-root-71"
                                                            component="span"
                                                            enter={true}
                                                            exit={true}
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root-71"
                                                            />
                                                          </TransitionGroup>
                                                        </TouchRipple>
                                                      </WithStyles(TouchRipple)>
                                                    </NoSsr>
                                                  </button>
                                                </ButtonBase>
                                              </WithStyles(ButtonBase)>
                                            </Button>
                                          </WithStyles(Button)>
                                        </Button$2>
                                      </a>
                                    </Link>
                                  </ButtonLink>
                                </div>
                              </div>
                            </Container>
                          </div>
                        </Toolbar>
                      </WithStyles(Toolbar)>
                    </header>
                  </Paper>
                </WithStyles(Paper)>
              </AppBar>
            </WithStyles(AppBar)>
          </div>
        </Content$2>
      </WithStyles(Content$2)>
    </Topbar>
  </Query>
</Header>
`;

exports[`Header component while loading 1`] = `
<Header>
  <Query
    query={
      Object {
        "definitions": Array [
          Object {
            "directives": Array [],
            "kind": "FragmentDefinition",
            "name": Object {
              "kind": "Name",
              "value": "Image",
            },
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "alias": undefined,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "id",
                  },
                  "selectionSet": undefined,
                },
                Object {
                  "alias": undefined,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "url",
                  },
                  "selectionSet": undefined,
                },
              ],
            },
            "typeCondition": Object {
              "kind": "NamedType",
              "name": Object {
                "kind": "Name",
                "value": "Image",
              },
            },
          },
          Object {
            "directives": Array [],
            "kind": "OperationDefinition",
            "name": Object {
              "kind": "Name",
              "value": "Account",
            },
            "operation": "query",
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "alias": undefined,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "account",
                  },
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "email",
                        },
                        "selectionSet": undefined,
                      },
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "id",
                        },
                        "selectionSet": undefined,
                      },
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "name",
                        },
                        "selectionSet": undefined,
                      },
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "profile",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "avatar",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "directives": Array [],
                                    "kind": "FragmentSpread",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "Image",
                                    },
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "name",
                              },
                              "selectionSet": undefined,
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
            "variableDefinitions": Array [],
          },
        ],
        "kind": "Document",
        "loc": Object {
          "end": 220,
          "start": 0,
        },
      }
    }
  >
    <Topbar
      className="Header"
    >
      <WithStyles(Content$2)
        className="Header"
      >
        <Content$2
          className="Header"
          classes={
            Object {
              "topbar": "Content-2-topbar-1",
            }
          }
        >
          <div
            className="Content-2-topbar-1 Header"
          >
            <WithStyles(AppBar)
              color="default"
              position="static"
            >
              <AppBar
                classes={
                  Object {
                    "colorDefault": "MuiAppBar-colorDefault-8",
                    "colorPrimary": "MuiAppBar-colorPrimary-9",
                    "colorSecondary": "MuiAppBar-colorSecondary-10",
                    "positionAbsolute": "MuiAppBar-positionAbsolute-4",
                    "positionFixed": "MuiAppBar-positionFixed-3",
                    "positionRelative": "MuiAppBar-positionRelative-7",
                    "positionStatic": "MuiAppBar-positionStatic-6",
                    "positionSticky": "MuiAppBar-positionSticky-5",
                    "root": "MuiAppBar-root-2",
                  }
                }
                color="default"
                position="static"
              >
                <WithStyles(Paper)
                  className="MuiAppBar-root-2 MuiAppBar-positionStatic-6 MuiAppBar-colorDefault-8"
                  component="header"
                  elevation={4}
                  square={true}
                >
                  <Paper
                    className="MuiAppBar-root-2 MuiAppBar-positionStatic-6 MuiAppBar-colorDefault-8"
                    classes={
                      Object {
                        "elevation0": "MuiPaper-elevation0-13",
                        "elevation1": "MuiPaper-elevation1-14",
                        "elevation10": "MuiPaper-elevation10-23",
                        "elevation11": "MuiPaper-elevation11-24",
                        "elevation12": "MuiPaper-elevation12-25",
                        "elevation13": "MuiPaper-elevation13-26",
                        "elevation14": "MuiPaper-elevation14-27",
                        "elevation15": "MuiPaper-elevation15-28",
                        "elevation16": "MuiPaper-elevation16-29",
                        "elevation17": "MuiPaper-elevation17-30",
                        "elevation18": "MuiPaper-elevation18-31",
                        "elevation19": "MuiPaper-elevation19-32",
                        "elevation2": "MuiPaper-elevation2-15",
                        "elevation20": "MuiPaper-elevation20-33",
                        "elevation21": "MuiPaper-elevation21-34",
                        "elevation22": "MuiPaper-elevation22-35",
                        "elevation23": "MuiPaper-elevation23-36",
                        "elevation24": "MuiPaper-elevation24-37",
                        "elevation3": "MuiPaper-elevation3-16",
                        "elevation4": "MuiPaper-elevation4-17",
                        "elevation5": "MuiPaper-elevation5-18",
                        "elevation6": "MuiPaper-elevation6-19",
                        "elevation7": "MuiPaper-elevation7-20",
                        "elevation8": "MuiPaper-elevation8-21",
                        "elevation9": "MuiPaper-elevation9-22",
                        "root": "MuiPaper-root-11",
                        "rounded": "MuiPaper-rounded-12",
                      }
                    }
                    component="header"
                    elevation={4}
                    square={true}
                  >
                    <header
                      className="MuiPaper-root-11 MuiPaper-elevation4-17 MuiAppBar-root-2 MuiAppBar-positionStatic-6 MuiAppBar-colorDefault-8"
                    >
                      <WithStyles(Toolbar)>
                        <Toolbar
                          classes={
                            Object {
                              "dense": "MuiToolbar-dense-41",
                              "gutters": "MuiToolbar-gutters-39",
                              "regular": "MuiToolbar-regular-40",
                              "root": "MuiToolbar-root-38",
                            }
                          }
                          disableGutters={false}
                          variant="regular"
                        >
                          <div
                            className="MuiToolbar-root-38 MuiToolbar-regular-40 MuiToolbar-gutters-39"
                          >
                            <Container>
                              <div
                                className="Container"
                              >
                                <Link
                                  className="logo"
                                  replace={false}
                                  to="/"
                                >
                                  <a
                                    className="logo"
                                    href="/"
                                    onClick={[Function]}
                                  >
                                    Social Network
                                  </a>
                                </Link>
                                <div />
                              </div>
                            </Container>
                          </div>
                        </Toolbar>
                      </WithStyles(Toolbar)>
                    </header>
                  </Paper>
                </WithStyles(Paper)>
              </AppBar>
            </WithStyles(AppBar)>
          </div>
        </Content$2>
      </WithStyles(Content$2)>
    </Topbar>
  </Query>
</Header>
`;
